TIP:            425
Title:          Internationalization of Default Panic Callback on Windows
Version:        $Revision: 1.3 $
Author:         Jan Nijtmans <jan.nijtmans@gmail.com>
State:          Draft
Type:           Project
Vote:           Pending
Created:        17-Jul-2013
Post-History:   
Keywords:       Tcl,platform integration,i18n
Tcl-Version:    8.7

~ Abstract

The default panic proc on Windows console applications writes the
message in UTF-8 to stderr. Unfortunately, the Windows console
normally does not have UTF-8 as code page but some single-byte
code page like CP1252. When using characters outside the ASCII
range, that does not give the expected output in the console.
This TIP proposes to add a new Console panic proc to the stub
library, and modify the Tcl_Main() macro to use it.

~ Rationale

Many parts of Tcl are initernationalized in Tcl 8.6: The command
line handling, and the communication with all Win32 API functions.
But the Panic proc has - so far - not been modified accordingly
for Windows console applications, even though win32 has a
suitable API to do so.

On Windows, there actually are two different panic procs,
one for GUI applications and one for console applications, but
external embedders don't have an API for deciding which one
should be used other than provide their own. This TIP can
finally do that: The call
''Tcl_SetPanicProc(Tcl_ConsolePanic)'' will initialize the
Tcl subsystem for Console applications, while
''Tcl_SetPanicProc(NULL)'' will continue to use the default.

Making things worse, stderr is implemented by the C runtime,
(msvcrt??.dll) but if a application is embedding or dynamically
loading tcl.dll then the runtime of the embedder might be
different from tcl.dll/tclsh.exe's runtime. The embedder
providing the panic proc gives the highest chance that panic
messages arrive in the same runtime as the embedder.
For tclsh.exe this makes no difference.

~ Proposed Change

A new function ''Tcl_ConsolePanic'' is added to the stub library
on Windows, which can be installed by embedding application as
panic proc. The full signature is:

 > EXTERN void
   '''Tcl_ConsolePanic'''(
       const char *''format''
       ...);

On other platforms than Windows, ''Tcl_ConsolePanic'' is a macro
equivalent to NULL, so doing Tcl_SetPanicProc(Tcl_ConsolePanic)
on other platforms has the effect of resetting the panic proc to
the platform's default.

This function is meant to be used for Win32 console
applications, and can deliver the message in 3 possible ways
* If a debugger is running, the message is sent there.
* If stderr is connected to a Windows console, the message is
sent there in unicode.
* Otherwise, stderr must have been redirected to a file
or a pipe or any character device. Then the UTF-8 BOM
(3 bytes) is written followed by the message in UTF-8.

The maximum number of (unicode) characters that is
written is 26000, as that is the maximum that
WriteConsoleW() can handle in a single call. See: 
[https://connect.microsoft.com/VisualStudio/feedback/details/635230]
If the message is longer than that, the string is
truncated and three dots appended to it. If
the message is sent to a character device, it
is not truncated, but the UTF-8 BOM is prepended.

The function is available from the stub library, in
order to bring the responsibility for correct linking
to the embedding application, in stead of Tcl. In
case of tclsh.exe, this makes no difference.

~ Reference Implementation

A reference implementation is available in the '''win-console-panic''' branch.
[http://core.tcl.tk/tcl/info/da05c42132]

~ Copyright

This document has been placed in the public domain.
