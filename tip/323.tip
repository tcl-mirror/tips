TIP:		323
Title:		Do Nothing Gracefully
Version:	$Revision: 1.2 $
Author:		Colin McCormack <colin@chinix.com>
Author:		Don Porter <dgp@users.sf.net>
Author:		Kevin B. Kenny <kennykb@acm.org>
State:		Draft
Type:		Project
Vote:		Pending
Created:	06-Aug-2008
Post-History:
Tcl-Version:	8.5

~ Abstract

A number of Tcl's built-in commands currently raise errors when given
arguments that would cause them to do nothing.  This proposal asks that
they instead simply do nothing gracefully.

~ Rationale

With the introduction of {*} syntax in Tcl 8.5 and its ability to convert
one original word into zero words when an empty list is expanded, scripts
using the syntax are forced to check for the empty list when passing
expanded arguments to a command taking variable numbers of arguments,
but arbitrarily rejecting zero arguments.  For example,

| variable {*}$dict

will currently fail if $dict has no entries.  Letting no-ops simply be
no-ops rather than errors greatly lightens the programming burden on callers.
There may be some marginal performance benefits as well.

Furthermore, there is no sound reason to constrain the argument count of
these commands to be positive when an argument count of zero has a natural
interpretation as a no-op.  There is an elegance in permitting a function
to range coherently over the complete domain.

~ Proposal

The syntax of the following commands shall be revised as described:

 1. '''file delete''' - accept zero pathnames.

 1. '''file mkdir''' - accept zero directories.

 1. '''global''' - accept zero variable names.

 1. '''glob''' - accept zero patterns, returning list of zero matching files
    (with '''-nocomplain''') or "no matches" error.

 1. '''lassign''' - accept zero variable names.
    [http://sf.net/tracker/index.php?func=detail&aid=1671880&group_id=10894&atid=360894]

 1. '''linsert''' - accept zero elements.
    [http://sf.net/tracker/index.php?func=detail&aid=1672056&group_id=10894&atid=360894]

 1. '''lrepeat''' - accept both ''number'' = 0 and zero elements.
    [http://sf.net/tracker/index.php?func=detail&aid=1671951&group_id=10894&atid=360894]

 1. '''my variable''' - accept zero variable names.

 1. '''namespace upvar''' - accept zero variable names.

 1. '''string first''' - able to find empty string.
    [http://sf.net/tracker/index.php?func=detail&aid=1243354&group_id=10894&atid=110894]
 
 1. '''string last''' - able to find empty string.
    [http://sf.net/tracker/index.php?func=detail&aid=1243354&group_id=10894&atid=110894]
 
 1. '''string replace''' - change interpretation of ''last'' < ''first'' case
    to enable replacement of an empty substring anchored at ''first''.

 1. '''tcl::tm::path add''' - accept zero paths.

 1. '''tcl::tm::path remove''' - accept zero paths.

 1. '''variable''' - accept zero variable names.
    [http://sf.net/tracker/index.php?func=detail&aid=1881284&group_id=10894&atid=360894]

~ Compatibilty

Most of the proposed changes convert errors into no-ops.  There should
be no compatibility concerns with those.  The exceptions are the
proposed changes to '''string first''', '''string last''', and
'''string replace''', where current behavior is so inexplicable, it
would be called a bug if it weren't documented.  Changing those commands
is an incompatibility, but likely a welcome one.

~ Implementation

When an implementation patch is completed, it will be logged
in the SF Tracker and noted here.

~ Exclusions

Some other candidates for this treatment are intentionally
left out of this proposal where for various reasons their
conversion is complicated in some way, or the benefits of
conversion are not as clear cut.  These other commands
might still be revised in a similar way, but are left for
other TIPs to accomplish it so that this TIP can focus only
on the low-hanging fruit.

 1. '''after idle'''

 1. '''dict exists'''

 1. '''dict set d''' ''val''	(no ''key'' argument)

 1. '''dict unset d''' ''val''	(no ''key'' argument)

 1. '''dict update d''' ''script''	(no ''key varName'' arguments)

 1. '''eval'''

 1. '''expr'''

 1. '''file join'''

 1. '''interp eval'''

 1. '''namespace eval'''

 1. '''parray''' [http://sf.net/tracker/index.php?func=detail&aid=1739221&group_id=10894&atid=360894]
    This feature request is more about tolerating errors than about expanding
    acceptance over a complete input domain.  Not in the spirit of this TIP.

 1. '''uplevel'''

 1. '''upvar''' - presence of the optional ''level'' argument makes this
    one messy.

~ Copyright

This document has been placed in the public domain.

