TIP:            10000
Title:          Dummy Proposal for Testing Editing Interfaces
Version:        $Revision: 1.54 $
Author:         Don Porter <dgp@users.sourceforge.net>
Author:         <nobody@nowhere.com>
Author:         Andreas Kupries <akupries@westend.com>
Author:         Donal K. Fellows <fellowsd@cs.man.ac.uk>
Author:         Andreas Kupries <a.kupries@westend.com>
Author:         <dgp@user.sourceforge.net>
Author:         Richard Suchenwirth <richard.suchenwirth@kst.siemens.de>
Author:         Kevin B KENNY <kennykb@acm.org>
State:          Draft
Type:           Informative
Vote:           Pending
Created:        03-Dec-2000
Post-History:   

~ Abstract

This proposal has no content.  It exists only to provide a document
on which testing of and practice using of the TIP editing interfaces
can take place.

~ References

This document serves a purpose similar to the Graffiti page
(http://purl.org/thecliff/tcl/wiki/34.html) at the Tcl'ers
Wiki (http://purl.org/thecliff/tcl/wiki/).

It will also be useful for testing the web editing interface
proposed in [13].

~ Submission Test

Some browsers are spinning their wheels after submission...
Looks like this is fixed now.

~ Author Add Test

Checking fix for missing Abstract after adding a new Author...
Fixed.

~ Reload/caching Test

See if additional HTTP headers help... Yes.

~ Test

Attempt to add a new section via the web interface (in a frame).

Are anonymous changes possible?

Check that updates of TIP renderer didn't break editing...

~ Testing the interface

<Andreas Kupries>
Just my first try at the new web editing interface for TIPs.

Hm ... Maybe we could add a direct reference to [3] to the
edit page for easy/quick lookup of the formatting (rules|definition).
It should open into its own window, immediately, when following the link.

I miss a button or some such which allows me to enter a new
TIP. Currently it seems as if I can just edit an existing
document.

More: After submitting the changes I had to explicitly reload the TIP
frame to see my changes. This is most likely a browser problem, but I
think we should add a note to the edit page about this, or people might
assume that their changes were lost in some way, and perceive the service
as unreliable.

That's it for now. ... I'll add the same comments to [13], they belong
there more than here.
</Andreas Kupries>

<note by="Richard Suchenwirth" date="2001-01-30">Whitespace in XML element names won't work.. or is 
"Kupries" an attribute without value?</note>

~ Dummy <Section> 'To' "Test" XML Generation

Move along now; nothing to see here...

~ Copyright

This document has been placed in the public domain.

~ ChangeLog

| $Log: not supported by cvs2svn $index)
|  }
|  set x [list 1 2 3]
|  increment x 0

will, of course, work as expected.

~ Discussion

There are several obvious extensions to the proposal that are not
addressed, and these omissions are intentional.

   * One possibility is to provide a syntax (perhaps negative subscripts)
     to allow numbering from the end of the list as well as the
     beginning.

   * Another possibility is to provide a notation for multiple
     subscripts, to allow surgical changes to be made in lists of
     lists.

These changes are not addressed primarily because the author of this
TIP foresees that they are likely to cause undesirable interactions
with future attempts to implement other types of indexed data
structure, such as the maps, vectors, and matrices of products
like BLT and Feather.  In a fully developed Tcl 9.0, it would be
desirable for all of these objects to support similar interfaces;
this TIP proposes a minimal first step.

   * The ''array'' command continues to operate only on associative
     arrays.

Lists are a simple enough structure that the full power of the
''array'' command is not required to deal with them, and having it
work on lists as well as arrays seems like needless effort.
Moreover, existing code may well depend on a combination of
''[array exists]'' and ''[info exists]'' to distinguish associative
arrays from scalar variables (including lists).  

   * We might wish to extend ''upvar'' syntax to allow a
     list element to be designated.

Extending the syntax in this fashion would make ''upvar'' more
consistent in its behavior, but appears to be expensive, in
terms of both performance (tracking down the linked references if a
list is rebuilt) and the effort required for implementation
(the author of this TIP is unlikely to have the time required to
implement the necessary changes to ''struct Var'' and the associated
code).  In fact, the author of this TIP would much rather deprecate
the use of ''upvar'' to refer to array elements.  A disproportionate
amount of code goes into supporting this seldom-used feature.

~ Reference Implementation

No reference implementation has yet been developed; the author of this
TIP wishes to solicit the opinions of the Tcl community before
spending a lot of time implementing a possibly bad idea.

~ Copyright

This document has been placed in the public domain.
